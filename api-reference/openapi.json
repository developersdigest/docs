{
  "openapi": "3.0.1",
  "info": {
    "title": "Simple Tools API",
    "description": "A collection of simple tools that can be used with Model Context Protocol (MCP)",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://sandbox.example.com/v1",
      "description": "Sandbox server for testing"
    }
  ],
  "paths": {
    "/search": {
      "get": {
        "summary": "Search for information",
        "description": "Search for information across multiple sources",
        "operationId": "searchInfo",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query string",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/weather": {
      "get": {
        "summary": "Get current weather",
        "description": "Get current weather information for a location",
        "operationId": "getWeather",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "City name or coordinates",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "units",
            "in": "query",
            "description": "Unit system to use",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["metric", "imperial"],
              "default": "metric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful weather data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherData"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/translate": {
      "post": {
        "summary": "Translate text",
        "description": "Translate text from one language to another",
        "operationId": "translateText",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["text", "targetLanguage"],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text to translate"
                  },
                  "sourceLanguage": {
                    "type": "string",
                    "description": "Source language code (ISO 639-1)",
                    "example": "en"
                  },
                  "targetLanguage": {
                    "type": "string",
                    "description": "Target language code (ISO 639-1)",
                    "example": "fr"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful translation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/summarize": {
      "post": {
        "summary": "Summarize text",
        "description": "Generate a concise summary of provided text",
        "operationId": "summarizeText",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["text"],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text to summarize"
                  },
                  "maxLength": {
                    "type": "integer",
                    "description": "Maximum length of summary in characters",
                    "default": 200,
                    "minimum": 50,
                    "maximum": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SearchResults": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query used"
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of results found"
          },
          "results": {
            "type": "array",
            "description": "List of search results",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title of the result"
                },
                "snippet": {
                  "type": "string",
                  "description": "Text snippet from the result"
                },
                "url": {
                  "type": "string",
                  "description": "URL of the result",
                  "format": "uri"
                }
              }
            }
          }
        }
      },
      "WeatherData": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location name"
          },
          "temperature": {
            "type": "number",
            "description": "Current temperature"
          },
          "condition": {
            "type": "string",
            "description": "Weather condition (e.g., sunny, cloudy)"
          },
          "humidity": {
            "type": "number",
            "description": "Humidity percentage"
          },
          "windSpeed": {
            "type": "number",
            "description": "Wind speed"
          },
          "windDirection": {
            "type": "string",
            "description": "Wind direction"
          },
          "units": {
            "type": "string",
            "description": "Unit system used (metric or imperial)"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of the weather data",
            "format": "date-time"
          }
        }
      },
      "TranslationResult": {
        "type": "object",
        "properties": {
          "originalText": {
            "type": "string",
            "description": "Original text that was translated"
          },
          "translatedText": {
            "type": "string",
            "description": "Translated text"
          },
          "sourceLanguage": {
            "type": "string",
            "description": "Source language code"
          },
          "targetLanguage": {
            "type": "string",
            "description": "Target language code"
          }
        }
      },
      "SummaryResult": {
        "type": "object",
        "properties": {
          "originalText": {
            "type": "string",
            "description": "Original text that was summarized"
          },
          "summary": {
            "type": "string",
            "description": "Generated summary"
          },
          "originalLength": {
            "type": "integer",
            "description": "Character count of original text"
          },
          "summaryLength": {
            "type": "integer",
            "description": "Character count of summary"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for authentication"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authentication"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}